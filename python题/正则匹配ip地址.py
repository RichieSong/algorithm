# coding:utf-8
'''
(?:X)在正则中表示所匹配的子组X不作为结果输出
正常情况(X)中的X会被作为新增的一个组序号输出，比如(A)(B)，A的序号1,B的序号2
如果(?:A)(B)，A将没有序号不输出,B的序号为1

根据规则：每段相同，范围都在 0 ~ 255
0~255 对应的正则表达式为 (2(5[0-5]|[0-4]\d))|[0-1]?\d{1,2}

组成部分：

2(5[0-5]|[0-4]\d) 匹配：200 ~ 255
[0-1]?\d{1,2} 匹配：0 ~ 199


'''
import re

ip = "adf24.4.5.2 5.4.5.7 6.4.3.3 dfgfg"
# p = re.compile(r"(((2(5[0-5]|[0-4]\d))|[0-1]?\d{1,2})(\.((2(5[0-5]|[0-4]\d))|[0-1]?\d{1,2})){3})")
s = re.findall(r"(?:[0-9]{1,3}\.){3}[0-9]{1,3}", ip)
# ss = re.findall(s, ip)
# ss = p.findall(ip)
result = re.findall(r"\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b",
                    ip)
print(s, result)
